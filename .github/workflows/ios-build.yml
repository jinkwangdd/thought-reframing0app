name: iOS Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
      
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
        working-directory: thoughtsreframer

    - name: Cache CocoaPods
      uses: actions/cache@v4
      with:
        path: thoughtsreframer/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install certificates and provisioning profiles
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        MOBILEPROVISION: ${{ secrets.MOBILEPROVISION }}
      run: |
        # Create keychain
        security create-keychain -p "temppass" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "temppass" build.keychain
        security set-keychain-settings -t 3600 -l build.keychain
        
        # Install certificate
        echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/xcodebuild -T /usr/bin/xcrun
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "temppass" build.keychain
        
        # Install provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo "$MOBILEPROVISION" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        
        # Extract provisioning profile UUID
        PROFILE_UUID=$(security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision | /usr/libexec/PlistBuddy -c "Print :UUID" -)
        echo "PROVISIONING_PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        
        # Detect and set certificate name
        CERT_NAME=$(security find-identity -v -p codesigning | grep "Apple Distribution\|iOS Distribution" | head -n 1 | cut -d '"' -f 2)
        if [ -z "$CERT_NAME" ]; then
          CERT_NAME=$(security find-identity -v -p codesigning | grep "Distribution" | head -n 1 | cut -d '"' -f 2)
        fi
        if [ -z "$CERT_NAME" ]; then
          CERT_NAME="Apple Distribution"
        fi
        echo "CODE_SIGN_IDENTITY=$CERT_NAME" >> $GITHUB_ENV
        echo "ðŸ”‘ Detected certificate: $CERT_NAME"
        
        # List all available identities for debugging
        echo "ðŸ“‹ Available signing identities:"
        security find-identity -v -p codesigning

    - name: Install dependencies
      working-directory: thoughtsreframer
      run: |
        gem install bundler
        bundle install
        pod install --repo-update

    - name: Build and Deploy
      working-directory: thoughtsreframer
      run: |
        echo "ðŸš€ Building iOS app..."
        bundle exec fastlane beta_auto

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: thoughtsreframer/*.ipa
        retention-days: 30

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          ~/Library/Logs/gym/
          thoughtsreframer/fastlane/report.xml
        retention-days: 7 