# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do
    # Clean build artifacts
    clean_build_artifacts
    
    # Increment build number based on the number of commits
    increment_build_number(xcodeproj: "thoughtsreframer.xcodeproj")
    
    # Build the app
    build_app(
      scheme: "thoughtsreframer",
      workspace: "thoughtsreframer.xcworkspace",
      export_method: "app-store",
      configuration: "Release",
      codesigning_identity: ENV['CERTIFICATE_NAME'],
      xcargs: "-allowProvisioningUpdates DEVELOPMENT_TEAM=#{ENV['TEAM_ID']} CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE=#{ENV['PROVISIONING_PROFILE_UUID']}",
      export_options: {
        method: "app-store",
        teamID: ENV['TEAM_ID'],
        signingCertificate: ENV['CERTIFICATE_NAME'],
        provisioningProfiles: {
          "com.solum.reframe.app" => ENV['PROVISIONING_PROFILE_UUID']
        },
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false,
        signingStyle: "manual"
      }
    )
    
    # Upload to TestFlight using Apple ID
    upload_to_testflight(
      apple_id: ENV['APPLE_ID'],
      app_identifier: "com.solum.reframe.app",
      team_id: ENV['TEAM_ID'],
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false
    )
    
    # Clean up
    clean_build_artifacts
  end
  
  desc "Build and upload to TestFlight (Automatic Signing)"
  lane :beta_auto do
    # Clean build artifacts
    clean_build_artifacts
    
    # Increment build number
    increment_build_number(xcodeproj: "thoughtsreframer.xcodeproj")
    
    # Build with automatic signing
    build_app(
      scheme: "thoughtsreframer",
      workspace: "thoughtsreframer.xcworkspace",
      export_method: "app-store",
      configuration: "Release",
      xcargs: "-allowProvisioningUpdates DEVELOPMENT_TEAM=#{ENV['TEAM_ID']} CODE_SIGN_STYLE=Automatic",
      export_options: {
        method: "app-store",
        teamID: ENV['TEAM_ID'],
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      }
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      apple_id: ENV['APPLE_ID'],
      app_identifier: "com.solum.reframe.app",
      team_id: ENV['TEAM_ID'],
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false
    )
    
    # Clean up
    clean_build_artifacts
  end
  
  desc "Clean all build artifacts and reset"
  lane :clean_all do
    clean_build_artifacts
    sh("rm -rf ~/Library/Developer/Xcode/DerivedData/*")
    sh("rm -rf ../build/*")
    UI.success("ðŸ§¹ All build artifacts cleaned!")
  end
  
  desc "Build for debugging"
  lane :build_debug do
    build_app(
      scheme: "thoughtsreframer",
      workspace: "thoughtsreframer.xcworkspace",
      export_method: "development"
    )
  end
  
  desc "Run tests"
  lane :test do
    run_tests(
      workspace: "thoughtsreframer.xcworkspace",
      scheme: "thoughtsreframer"
    )
  end
  
  # Error handling
  error do |lane, exception|
    # This block is called when there is an error in any lane
    UI.error("Error in lane #{lane}: #{exception}")
  end
end 